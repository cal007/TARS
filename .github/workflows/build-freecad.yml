name: build-freecad
on:
  workflow_dispatch:
  push:
    paths:
      - '01_CAD/src/**.py'
      - '.github/workflows/build-freecad.yml'
      - '03_Docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch FreeCAD 1.0.0 AppImage + SHA256 (SourceForge)
        run: |
          set -euo pipefail
          APPIMG="FreeCAD_1.0.0-conda-Linux-x86_64-py311.AppImage"
          SHAFILE="${APPIMG}-SHA256.txt"
          curl -L -o "${APPIMG}" "https://sourceforge.net/projects/freecad.mirror/files/1.0.0/${APPIMG}/download"
          curl -L -o "${SHAFILE}" "https://sourceforge.net/projects/freecad.mirror/files/1.0.0/${SHAFILE}/download"
          sha256sum -c <(sed -E "s#^([0-9a-f]+) .*#\1  ${APPIMG}#g" "${SHAFILE}")
          chmod +x "${APPIMG}"
          ./"${APPIMG}" --appimage-extract
          # Debug: zeige, was im usr/bin liegt
          ls -la "${GITHUB_WORKSPACE}/squashfs-root/usr/bin"

      - name: Prepare build dir
        run: |
          set -euo pipefail
          mkdir -p 01_CAD/build


      - name: Build FCStd and STEP (FreeCADCmd from AppImage)
        env:
          COLLISION_OK: "1"   # verhindert Abbruch bei Kollisions-Guard, exportiert trotzdem
          DEBUG: "1"          # Debug-Ausgaben (Base/Pivot/BoundingBox)
          SLB_POSE: transport # oder load/use
        run: |
          set -euo pipefail
          mkdir -p 01_CAD/build
          FC_BIN="$(find "${GITHUB_WORKSPACE}/squashfs-root/usr/bin" -maxdepth 1 -type f -iname 'FreeCADCmd*' | head -n1)"
          if [[ -z "${FC_BIN}" ]]; then
            echo "FreeCADCmd nicht gefunden in squashfs-root/usr/bin"; ls -la "${GITHUB_WORKSPACE}/squashfs-root/usr/bin"; exit 127
          fi
          chmod +x "${FC_BIN}"
          echo "Using: ${FC_BIN}"
          echo "Env: COLLISION_OK=${COLLISION_OK} DEBUG=${DEBUG} SLB_POSE=${SLB_POSE}"
          "${FC_BIN}" --version || true
          "${FC_BIN}" -c 01_CAD/src/build_tars_fcstd.py


      - name: Inspect build outputs
        run: |
          set -euo pipefail
          echo "PWD: $(pwd)"
          ls -la 01_CAD/build || true
          echo "Scan for CAD files:"
          find 01_CAD -maxdepth 3 -type f -iregex '.*\.\(fcstd\|step\|stp\)$' -print


      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TARS_v0.2_FCStd_STEP
          path: |
            01_CAD/build/*.FCStd
            01_CAD/build/*.step
            01_CAD/build/*.stp
          if-no-files-found: error
          retention-days: 14
